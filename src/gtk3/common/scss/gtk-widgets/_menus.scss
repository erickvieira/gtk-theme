// This file is part of the Pop!_GTK Theme.
// See gtk.scss for full license and copyright information
/* 
 * widgets/_menus.scss - Menus and Menu bars
 *
 * File credits: Ian Santopietro <isantop@gmail.com>
 */

%menu,
menu,
.menu,
window.popup {
  padding: $menu_padding;
  border-radius: $corner_radius;
  background-color: $bg_color;

  &.button {
    background-image: none;
  }
}

menubar,
.menubar {
  background-color: $inverse_overlay_color;
  -GtkWidget-window-dragging: true;
  
  > menuitem {
    padding: $menu_padding $menu_padding * 3;
    transition: $standard_transition;
    border: $line_size solid transparent;
    color: $fg_color;
    
    &:hover {
      border-bottom-color: $color_theme_2;
      background-color: transparent;
      color: if($color == 'light', $text_color_2, $highlight_color_2);
    }
    
    &:active {
      border-bottom-color: $color_theme_2;
      background-color: $bg_color;
      color: if($color == 'light', $text_color_2, $highlight_color_2);
    }
  }
  window > &,
  window > box > &:first-child,
  terminal-window > box > &:first-child {
    border: 0 solid $titlebar_hl_color;
    border-width: 0 $border_size;
    background-color: $titlebar_bg_color;
    color: $titlebar_fg_color;

    .maximized &,
    .fullscreen &,
    .tiled &,
    .tiled-left &,
    .tiled-right &,
    .tiled-top &,
    .tiled-bottom & {
      border: none;
      border-radius: 0;
      box-shadow: none;
    }
    
    &:backdrop {
      border-color: lighten($titlebar_hl_color, 5%);
      background-color: lighten($titlebar_bg_color, 5%);
    }
    
    > menuitem {
      transition: $standard_transition;
      border: $line_size solid transparent;
      color: rgba($titlebar_fg_color, 0.8);
      
      &:hover {
        border-bottom-color: $color_theme_2;
        background-color: transparent;
        color: if($titlebar == 'light', $text_color_2, $highlight_color_2);
      }
      
      &:active {
        border-bottom-color: $color_theme_2;
        background-color: transparent;
        color: if($titlebar == 'light', $text_color_2, $highlight_color_2);
      }
    }
  }

}

menuitem,
.menuitem
modelbutton {
  min-width: $large_size;
  padding: $mini_padding;
  border: none;
  border-radius: $corner_radius;
  background-color: transparent;
  color: $fg_color;
  text-shadow: none;
  box-shadow: none;
  -gtk-icon-shadow: none;
  
  &:active, 
  &:hover {
    background-color: $inverse_overlay_color;
  }
  
  :disabled {
    color: rgba($fg_color, 0.6);
  }
  
  accelerator {
    color: rgba($fg_color, 0.6);
  }
  
  arrow {
    min-width: $small_size;
    min-height: $small_size;
    -gtk-icon-source: -gtk-icontheme('pan-end-symbolic');
    
    &:dir(rtl) {
      -gtk-icon-source: -gtk-icontheme('pan-end-symbolic-rtl');
    }
    
    &.top {
      -gtk-icon-source: -gtk-icontheme('pan-up-symbolic');
    }
    
    &.bottom {
      -gtk-icon-source: -gtk-icontheme('pan-down-symbolic');
    }
  }
  
  image,
  label {
    padding: $mini_padding;
  }
}

