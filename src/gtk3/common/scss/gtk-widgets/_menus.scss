// This file is part of the Pop!_GTK Theme.
// See gtk.scss for full license and copyright information
/* 
 * widgets/_menus.scss - Menus and Menu bars
 *
 * File credits: Ian Santopietro <isantop@gmail.com>
 */

%menu,
menu,
.menu {
  padding: $small_padding_em;
  border-radius: $corner_radius;
  background-color: $bg_color;
  box-shadow: $shadow_hover;

  &.button {
    background-image: none;
  }
}

menubar,
.menubar {
  background-color: $inverse_overlay_color;
  -GtkWidget-window-dragging: true;
  
  > menuitem {
    padding: $mini_padding_em $small_padding_em;
    color: $fg_color;
    
    &:hover {
      background-color: transparent;
      color: if($color == 'light', $text_color_2, $highlight_color_2);
    }
    
    &:active {
      background-color: $bg_color;
      color: if($color == 'light', $text_color_2, $highlight_color_2);
    }
  }
  
  window > &,
  window > box > &:first-child,
  terminal-window > box > &:first-child {
    background-color: $titlebar_bg_color;
    color: $titlebar_fg_color;

    .maximized &,
    .fullscreen &,
    .tiled &,
    .tiled-left &,
    .tiled-right &,
    .tiled-top &,
    .tiled-bottom & {
      box-shadow: none;
    }
    
    &:backdrop {
      background-color: lighten($titlebar_bg_color, 5%);
    }
    
    > menuitem {
      color: rgba($titlebar_fg_color, 0.8);
      
      &:hover {
        background-color: transparent;
        color: if($titlebar == 'light', $text_color_2, $highlight_color_2);
      }
      
      &:active {
        background-color: transparent;
        color: if($titlebar == 'light', $text_color_2, $highlight_color_2);
      }
    }
  }

}

menu,
.menu {
  
  menuitem,
  .menuitem {
    padding: $tinier_padding_em $small_padding_em;
    border-radius: $corner_radius;
    background-color: transparent;
    color: $fg_color;
    -gtk-icon-shadow: none;
    
    &:active, 
    &:hover {
      background-color: $inverse_overlay_color;
    }
    
    :disabled {
      color: rgba($fg_color, 0.6);
    }
    
    accelerator {
      color: rgba($fg_color, 0.6);
    }
    
    arrow {
      min-height: 1.2em;
      -gtk-icon-source: -gtk-icontheme('pan-end-symbolic');
      
      &:dir(rtl) {
        -gtk-icon-source: -gtk-icontheme('pan-end-symbolic-rtl');
      }
      
      &.top {
        -gtk-icon-source: -gtk-icontheme('pan-up-symbolic');
      }
      
      &.bottom {
        -gtk-icon-source: -gtk-icontheme('pan-down-symbolic');
      }
    }

    label {
      padding-right: $standard_padding_em;
      padding-left: 0;

      &:dir(rtl) {
        padding-right: 0;
        padding-left: $standard_padding_em;
      }
    }

    check,
    radio {
      min-height: 1.2em;
    }
  }
}
