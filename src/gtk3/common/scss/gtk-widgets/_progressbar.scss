// This file is part of the Pop!_GTK Theme.
// See gtk.scss for full license and copyright information
/* 
 * widgets/_progressbar.scss - Progress bar and levelbar styling
 *
 * File credits: Ian Santopietro <isantop@gmail.com>
 */

%progress,
progress,
.progressbar 
levelbar block {
  min-width: $progress_size;
  min-height: $progress_size;
  border-radius: $corner_radius;
  background-color: $color_theme_1;
  
  &:backdrop {
    background-color: rgba($color_theme_1, 0.4);
  }
  
  entry & {
    background-color:  rgba($color_theme_1, 0.4);
    color: $inverse_fg_color;
  }
}

%trough,
trough, 
.trough,
levelbar block.empty {
  min-width: $progress_size;
  min-height: $progress_size;
  border-radius: $corner_radius;
  background-color: rgba($fg_color, 0.2);
  
  &:backdrop {
    background-color: rgba($fg_color, 0.1);
  }
}

treeview.trough,
treeview.progressbar {
  background-color: transparent;
  
  &:backdrop,
  &:backdrop:selected {
    background-color: transparent;
  }
}

treeview.progressbar {
  border-bottom-color: $selected_bg_color;
  
  &:selected {
    border-bottom-color: $selected_fg_color;
  }
}

treeview.trough {
  border-bottom-color: rgba($fg_color, 0.2);
  
  &:selected {
    border-bottom-color: rgba($selected_fg_color, 0.4);
  }
}

levelbar {
  min-width: $progress_size;
  min-height: $progress_size;
  
  trough {
    background-color: $overlay_color;
    box-shadow: $shadow_standard;
  }

  block {
    @extend %progress;
    margin: 0.15em;
    
    &.filled.low {
      background-color: $error_bg_color;
      
      &:backdrop {
        background-color: rgba($error_bg_color, 0.4);
      }
    }
    
    &.filled.middle {
      @extend %progress;
    }
    
    &.filled.high {
      background-color: $suggested_bg_color;
      
      &:backdrop {
        background-color: rgba($suggested_bg_color, 0.4);
      }
    }
    
    &.empty {
      @extend %trough;
    }
  }
  
  trough {
    background-color: transparent;
    
    &:backdrop {
      background-color: transparent;
    }
  }
}

scale {
  min-height: 0.75em;
}

scale.horizontal {
  margin: 0.75em 0;
}

scale.vertical {
  margin: 0 0.75em;
}

scale slider {
  min-width: 1.2em;
  min-height: 1.2em;
  margin: -0.6em;
  border-radius: 9999px;
}

scale {

  // This feels hacky, but seems to be the easiest way to get a focus outline.
  *:focus {
    outline-offset: 0.6em;
  }
  
  slider {
    min-width: 1.2em;
    min-height: 1.2em;
    margin: -0.6em;
    transition: $standard_transition;
    border: 0.2em solid $color_theme_1;
    border-radius: $circular_radius;
    background-color: $color_theme_1;
    color: $color_theme_1;
    
    &:hover {
      box-shadow: $shadow_standard;
      
      &:active:focus {
        box-shadow: $shadow_hover;
      }
    }
    
    &:backdrop {
      background-color: rgba($color_theme_1, 0.4);
    }
    
    &:disabled {
      border-color: rgba($fg_color, 0.4);
      background-color: $bg_color;
      color: $bg_color;
    }
  }
  
  trough {
    @extend %trough;
  }
  
  highlight {
    @extend %progress;
    
    &:disabled {
      background-color: rgba($fg_color, 0.4);
      
      &:backdrop {
        background-color: rgba($fg_color, 0.2);
      }
    }
  }
  
  mark {
    min-width: 0.015em;
    min-height: 0.015em;
    background-color: rgba($fg_color, 0.6);
  }
  
  &.horizontal mark {
    min-height: $marks_size;
  }
  
  &.vertical mark {
    min-width: $marks_size;
  }
}
